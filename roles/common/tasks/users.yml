---
- name: Users - Create all necessary groups for deploy user
  group: name={{item}} state=present
  with_items:
    - "{{user_deploy.groups}}"

- name: Users - Create all necessary groups for share user
  group: name={{item}} state=present
  with_flattened:
    - "{{shared.group}}"
    - "{{shared.additionnal_groups}}"
  tags:
    - share

- name: Users - Create all necessary groups for every other users
  group: name={{item.1}} state=present
  with_subelements:
    - users | default({})
    - groups

- name: Users - Manage shared/backup account
  user: name={{shared.user}} state=present groups={{[shared.group] | union(shared.additionnal_groups) | join(",")}} shell=/bin/bash password="*" generate_ssh_key=yes ssh_key_bits=4096 ssh_key_comment=no
  tags:
    - share

- name: Share - Authorize shared/backup account to communicate between servers (SFTP)
  shell: echo `sshpass -p {{root_password}} ssh -o StrictHostKeyChecking=no root@{{item}} "cat /home/{{shared.user}}/.ssh/id_rsa.pub"` >> /home/{{shared.user}}/.ssh/authorized_keys
  with_items: groups['all']
  when: "'{{inventory_hostname}}' != '{{item}}'"
  tags:
    - creates

- name: Users - Manage all other users
  user: name={{item.name}} state=present groups="{{item.groups | join(",") }}" shell={{item.shell}} password="*" update_password=on_create
  when: item.groups is defined
  with_flattened:
    - users | default({})
    - "{{[user_deploy]}}"

- name: Users - Set SSH keys for all users except share
  authorized_key: user={{item.name}} key="{{ lookup('file', '../../../files/sshkeys/'+ item.name +'.pub') }}"
  when: "'{{shared.group}}' in item.groups and item.name is defined"
  with_flattened:
    - users | default({})
    - "[{{user_deploy}}]"

- name: Users - Install sudoers configuration
  template: src=etc/sudoers.j2 dest=/etc/sudoers mode=644

- name: Users - Install change password file
  template: src=usr/local/bin/change_passwd.j2 dest=/usr/local/bin/change_passwd mode=755

- name: Users - Install dynamic motd
  template: src=usr/local/bin/dynmotd.j2 dest=/usr/local/bin/dynmotd mode=755

- name: Users - Install vim configuration
  template: src=etc/vim/vimrc.j2 dest=/etc/vim/vimrc mode=644

- name: Users - Install user profile configuration for bash
  template: src=home/bashrc.j2 dest="/home/{{item.name}}/.bashrc" mode=644 owner="{{item.name}}" group="{{item.name}}"
  when: item.name is defined
  with_flattened:
    - users | default({})
    - "{{[user_deploy]}}"

- name: Users - Install user profile configuration for zsh
  template: src=home/zshrc.j2 dest="/home/{{item.name}}/.zshrc" mode=644 owner="{{item.name}}" group="{{item.name}}"
  when: item.name is defined
  with_flattened:
    - users | default({})
    - "{{[user_deploy]}}"

