# This is the main Apache server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See http://httpd.apache.org/docs/2.2/ for detailed information about
# the directives and /usr/share/doc/apache2-common/README.Debian.gz about
# Debian specific hints.
#
#
# Summary of how the Apache 2 configuration works in Debian:
# The Apache 2 web server configuration in Debian is quite different to
# upstream's suggested way to configure the web server. This is because Debian's
# default Apache2 installation attempts to make adding and removing modules,
# virtual hosts, and extra configuration directives as flexible as possible, in
# order to make automating the changes and administering the server as easy as
# possible.

# It is split into several files forming the configuration hierarchy outlined
# below, all located in the /etc/apache2/ directory:
#
#	/etc/apache2/
#	|-- apache2.conf
#	|	`--  ports.conf
#	|-- mods-enabled
#	|	|-- *.load
#	|	`-- *.conf
#	|-- conf.d
#	|	`-- *
# 	`-- sites-enabled
#	 	`-- *
#
#
# * apache2.conf is the main configuration file (this file). It puts the pieces
#   together by including all remaining configuration files when starting up the
#   web server.
#
#   In order to avoid conflicts with backup files, the Include directive is
#   adapted to ignore files that:
#   - do not begin with a letter or number
#   - contain a character that is neither letter nor number nor _-:.
#   - contain .dpkg
#
#   Yet we strongly suggest that all configuration files either end with a
#   .conf or .load suffix in the file name. The next Debian release will
#   ignore files not ending with .conf (or .load for mods-enabled).
#
# * ports.conf is always included from the main configuration file. It is
#   supposed to determine listening ports for incoming connections, and which
#   of these ports are used for name based virtual hosts.
#
# * Configuration files in the mods-enabled/ and sites-enabled/ directories
#   contain particular configuration snippets which manage modules or virtual
#   host configurations, respectively.
#
#   They are activated by symlinking available configuration files from their
#   respective *-available/ counterparts. These should be managed by using our
#   helpers a2enmod/a2dismod, a2ensite/a2dissite. See
#   their respective man pages for detailed information.
#
# * Configuration files in the conf.d directory are either provided by other
#   packages or may be added by the local administrator. Local additions
#   should start with local- or end with .local.conf to avoid name clashes. All
#   files in conf.d are considered (excluding the exceptions noted above) by
#   the Apache 2 web server.
#
# * The binary is called apache2. Due to the use of environment variables, in
#   the default configuration, apache2 needs to be started/stopped with
#   /etc/init.d/apache2 or apache2ctl. Calling /usr/bin/apache2 directly will not
#   work with the default configuration.


# Global configuration
#

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# NOTE!  If you intend to place this on an NFS (or otherwise network)
# mounted filesystem then please read the LockFile documentation (available
# at <URL:http://httpd.apache.org/docs/2.2/mod/mpm_common.html#lockfile>);
# you will save yourself a lot of trouble.
#
# Do NOT add a slash at the end of the directory path.
#
#ServerRoot "/etc/apache2"

#
# The accept serialization lock file MUST BE STORED ON A LOCAL DISK.
#
Mutex file:${APACHE_LOCK_DIR} default

#
# PidFile: The file in which the server should record its process
# identification number when it starts.
# This needs to be set in /etc/apache2/envvars
#
PidFile ${APACHE_PID_FILE}

#
# Timeout: The number of seconds before receives and sends time out.
#
Timeout 300

#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
KeepAlive On

#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
MaxKeepAliveRequests 300

#
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
#
KeepAliveTimeout 5

# These need to be set in /etc/apache2/envvars
User ${APACHE_RUN_USER}
Group ${APACHE_RUN_GROUP}

#
# HostnameLookups: Log the names of clients or just their IP addresses
# e.g., www.apache.org (on) or 204.62.129.132 (off).
# The default is off because it'd be overall better for the net if people
# had to knowingly turn this feature on, since enabling it means that
# each client request will result in AT LEAST one lookup request to the
# nameserver.
#
HostnameLookups Off

# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog ${APACHE_LOG_DIR}/error.log

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

#
# The following directives define some format nicknames for use with
# a CustomLog directive (see below).
# If you are behind a reverse proxy, you might want to change %h into %{X-Forwarded-For}i
#
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %O" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

# Include module configuration:
Include mods-enabled/*.load
Include mods-enabled/*.conf

# Include list of ports to listen on and which to use for name based vhosts
Include ports.conf

#
# AccessFileName: The name of the file to look for in each directory
# for additional configuration directives.  See also the AllowOverride
# directive.
#
AccessFileName .htaccess

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<FilesMatch "^\.ht">
	Require all denied
</FilesMatch>

# Sets the default security model of the Apache2 HTTPD server. It does
# not allow access to the root filesystem outside of /usr/share and /var/www.
# The former is used by web applications packaged in Debian,
# the latter may be used for local directories served by the web server. If
# your system is serving content from a sub-directory in /srv you must allow
# access here, or in any related virtual host.
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Require all denied
</Directory>

# Include of directories ignores editors' and dpkg's backup files,
# see the comments above for details.

# Include generic snippets of statements
IncludeOptional conf-enabled/*.conf

# Include the virtual host configurations:
IncludeOptional sites-enabled/*.conf

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

# Security policy
ServerSignature Off
ServerTokens Prod
<IfModule mod_headers.c>
    Header set X-Content-Type-Options "nosniff"
    Header set X-XSS-Protection "1; mode=block"
    Header set X-Frame-Options "SAMEORIGIN"
    Header set Content-Security-Policy "default-src data: 'self' 'unsafe-inline' 'unsafe-eval'"
</IfModule>

{% if ssl.enabled %}
<IfModule mod_ssl.c>
# SSL stapling
SSLUseStapling on
SSLStaplingCache "shmcb:logs/stapling-cache(150000)"
</IfModule>
{% endif %}


# Disable E-tag
FileETag none

# Browser cache
# 7 days
<IfModule mod_headers.c>
	<filesMatch ".(ico|flv|jpg|jpeg|png|gif|js|css|swf|html|htm|xml|txt)$">
		Header set Cache-Control "public,max-age=604800"
	</filesMatch>
</IfModule>

# Fix apache
AcceptFilter http none

# Block bad bots
<IfModule mod_setenvif.c>
  <LocationMatch ".*">
    BrowserMatchNoCase "AhrefsBot" bad_bot # AhrefsBot
    BrowserMatchNoCase "Alexibot" bad_bot # Alexibot
    BrowserMatchNoCase "gigabot" bad_bot # gigabot
    BrowserMatchNoCase "java" bad_bot # java
    BrowserMatchNoCase "Arachnophilia" bad_bot # Arachnophilia
    BrowserMatchNoCase "grapeshot" bad_bot # grapeshot
    BrowserMatchNoCase "SafetyNet" bad_bot # SafetyNet
    BrowserMatchNoCase "linklooker" bad_bot # linklooker
    BrowserMatchNoCase "INGRID" bad_bot # INGRID
    BrowserMatchNoCase "Enigma" bad_bot # EnigmaBot
    BrowserMatchNoCase "BackDoorBot" bad_bot # BackDoorBot
    BrowserMatchNoCase "Bullseye" bad_bot # Bullseye
    BrowserMatchNoCase "msnbot" bad_bot # msnbot
    BrowserMatchNoCase "BlowFish" bad_bot # BlowFish
    BrowserMatchNoCase "Black" bad_bot # Black
    BrowserMatchNoCase "Ezoom" bad_bot # Ezoom
    BrowserMatchNoCase "360Spider" bad_bot # 360Spider
    BrowserMatchNoCase "MJ12bot" bad_bot # MJ12bot
    BrowserMatchNoCase "checks.panopta.com" bad_bot # Panopta
    BrowserMatchNoCase "mon.itor.us" bad_bot # Monitor.us (service de monitoring)
    BrowserMatchNoCase "mediawords" bad_bot # Mediawords (inconnu)
    BrowserMatchNoCase "SurveyBot" bad_bot # Netcraft survey bot (sondage)
    BrowserMatchNoCase "Netcraft" bad_bot # Netcraft survey bot (sondage)
    BrowserMatchNoCase "CareerBot" bad_bot # CarrerBot (recherche des offres d'emploi sur le web)
    BrowserMatchNoCase "TweetmemeBot" bad_bot # CarrerBot (recherche des offres d'emploi sur le web)
    BrowserMatchNoCase "Aboundex" bad_bot # Aboundex (spam)
    BrowserMatchNoCase "WASALive-Bot" bad_bot # WasaLive (spam)
    BrowserMatchNoCase "Butterfly" bad_bot # Butterfly (cybercriminal)
    BrowserMatchNoCase "ZmEu" bad_bot # ZmEu (cybercriminal)
    BrowserMatchNoCase "Morfeus" bad_bot # Morfeus (cybercriminal)
    BrowserMatchNoCase "Kraken" bad_bot # Kraken (cybercriminal)
    BrowserMatchNoCase "Snoopy" bad_bot # Snoopy (cybercriminal)
    BrowserMatchNoCase "CompSpyBot" bad_bot # CompSpyBot (inconnu)
    BrowserMatchNoCase "IstellaBot" bad_bot # IstellBot (inconnu)
    BrowserMatchNoCase "Daumoa" bad_bot # Daumoa (Inconnu)
    BrowserMatchNoCase "Exabot" bad_bot # Exabot (Moteur de recherche)
    BrowserMatchNoCase "SemrushBot" bad_bot # SemrushBot (Moteur de recherche)
    BrowserMatchNoCase "Sosospider" bad_bot # Sosospider (inconnu)
    BrowserMatchNoCase "findlinks" bad_bot # findlinks (seo)
    BrowserMatchNoCase "SISTRIX" bad_bot # SISTRIX (seo)
    BrowserMatchNoCase "uMBot" bad_bot # uMBot (seo)
    BrowserMatchNoCase "VoilaBot" bad_bot # VoilaBot (inconnu)
    BrowserMatchNoCase "SeznamBot" bad_bot # SeznameBot (seo)
    BrowserMatchNoCase "ShowyouBot" bad_bot # ShowyouBot (inconnu)
    BrowserMatchNoCase "Lipperhey" bad_bot # Lipperhey (inconnu)
    BrowserMatchNoCase "niki-bot" bad_bot # niki-bot (inconnu)
    BrowserMatchNoCase "StatusCake" bad_bot # status cake (monitoring)

    Order Deny,Allow
    Deny from env=bad_bot
  </LocationMatch>
</IfModule>
